svg 和 <use xlink:href=""></use>

<span  aria-hidden=true></span>
aria-hidden=true 让浏览器忽略其语义， 例如 当浏览器阅读页面内容时，会自动忽略

通过 clover-blog 学习 类命名。。。

使用模板语法完成字符串拼接 ,如通过 属性或者data 拼接 style

toFixed 会四舍五入

window.btoa(str)  方法用于加密字符串为 base-64 编码
window.atob(encodedStr)  方法用于解码使用 base-64 编码的字符串。

&:hover::before hover使用得小技巧

css fill 属性

把共用css变量定义到base.css ,然后改变值从而改变多个dom的css属性

多使用document的事件方法 而不是 window的

window.getComputedStyle(dom,伪类) ，查询最终渲染出来的css样式
我们可以通过使用 getComputedStyle 读取样式，通过 element.style 修改样式

如果不清楚 一些冷门的vue的事件如何使用，那么直接通过refs设置dom的事件
this.$refs.slder.onmousedown = ()=>{.....}

let flag = navigator.userAgent.match(
/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|
MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i)
正则匹配 客户端的是否为移动端

Math.max 和 Math.min 两个函数 代替其它比较代码从而优化代码

使用@touch   pc浏览器调试移动端时， 发现  getBoundingClientRect 全为0!!!

_this 代指  闭包变量 的this

为一些组件设置背景颜色为 透明，
当 图片加载不出来时，则背景为 主页面 的背景图

App.Vue 引入阿里巴巴图标库

监视器过多，形成一个圈，会导致进度条流畅度特别低  ---LevelProgressBar

属性拥有默认值，当注入属性，不采用默认值时 ，不会触发监视器方法

使用动画或者过渡时， 如果在之前已经设置过相同的css属性，那么 动画或者过渡会把它覆盖，
因此需要重新声明一次

icon 设置为 width 1em, height 1em
那么改变icon的fontsize就可以改变大小,并且可以因此设置图片比例!!!

子组件方法发送事件 父组捕获事件再调用该方法 会引起循环调用，导致栈溢出！！ 如 MusicProgressBar

touch 和 click 对比
touchevent中 由于可能有多点触控，获取位置需要通过touches数组
click不需要
只设置click时，在移动端一次touch， onmousedown onmousemove onmouseup 会一次性引发
但是只设置touch不设置click时， ontouchstart  ontouchmove  ontouchend   都不会触发

字体大小并不等于， 小于只有一行content文本的span的高度，
这是由于字体上下包含一小部分空白

transition过渡 + touchmove 滚动 造成了卡顿,要避免同时使用 例子:lyricMask测试.html中

根据 css 层叠，样式优先级  !important > style > id > 类 = 属性选择 = 伪类  > 标签 = 伪元素 > 通配符
同级情况下后声明的的属性覆盖之前声明的相同属性

加入某个子dom的父dom没有显式声明height，那么该子dom 的height百分比设置无效

若内容为为纯文本，则无法设置高度，高度仅由文本决定

设置透明边框是一个很实用的技巧！！！

似乎必须让video的
DOMException: play() failed because the user didn't interact with the document first.

-webkit-background-clip: text; 这是让歌词完美显示的关键!!!
-moz代表firefox浏览器私有属性bai；
-ms代表IE浏览器私有属性；
-webkit代表chrome、safari私有属性；
-o代表Opera私有属性。

Autoprefixer  使用该插件协助添加css前缀做到属性兼容

从客户端到服务端，直接使用第三方接口会有跨域的问题，但是服务端和服务端之间没有跨域问题，
因此需要一台自己的服务器

资源链接使用restful风格,axios.get然后拼接参数

建议参数低于三个直接参数拼接

独立出的request api,防止换框架时修改代码尴尬

proxyTable 设置代理，避免跨域问题

box-sizing：border-box下，border属于width和height的一部分，border范围
包括了padding，如果要减少border范围，需要在外层套div，并设置padding，
在内层设置border，若增加border范围，则内层可设置padding，并设置border

第一次引入时，尽量copy，不然容易心态炸...

心态炸了两天。。。。

mavon-editor有小bug，props必须一次性配置齐全，才能关闭编辑区域，
并且，动态改变传入属性值部分不起作用，例如navigation

使用 absolute 会导致 父dom无法被撑高，需要注意

复习router: 在某一个router-view 中进行任何更改路由指向的行为，
都会寻找在配置时的复合条件且在顺序最前的路由，当确定路由时，会根据该路由再去查看子路由情况，继续确定子路由!!

给input 包一层div，取消input的边框等，设置padding,统一背景颜色，通过absolute,就能往input中放图标了 --registerPassword

即使显式传入了 props， 组件也不会等到props赋完值再来赋值data,
不要在初始化时通过 props  给data赋值

opacity只需要设置给父级，就能改变父级 并影响 子孙级别的dom 的透明度

尽可能不要在 slot实现 里放组件，否则容易发生奇怪的bug如 ，zindex失效 --UserHome 和 NavBar

通过style 设置 animation-name 或者 animation 总是无效的 。。。。。。 只能通过选择器设置 animation-name或animation
但是style设置动画其它属性如 animation-play-state 等有效

元素分布在中心： 左右 使用margin auto 和 文本text-align， 上下使用padding+heignt:100%，文本使用vertical-align;position:absolute+transform

vertical对行内元素起作用，但是一行只有一个元素时，没有效果，它的效果是相对于兄弟元素的

// [] 放在 if 中 作条件 和  []==false 结果是不一样的！！！

//通过 props 来改变 barValue, 这不是不太正确的方式,需要加上watch来监视，因为data赋值可能先于props

关于路由，如果 params 更新，不过路径其它部分没有变化，那么组件不会发生改变，也不会引发activated方法

<router-view :key="$route.fullPath"/> 防止路由参数改变而组件复用，
生命周期函数不执行，内容不改变 (activated 和 路由守卫 beforeRoute。。aftereRoute 同样不会执行..)

或者通过监视器 来 手动执行声明周期函数
      $route(newVal){
        console.log(newVal.fullPath)
      }

